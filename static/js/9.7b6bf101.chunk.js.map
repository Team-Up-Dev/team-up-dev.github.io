{"version":3,"sources":["functions/getRepositories.js","functions/programmingLanguagesAndTheirColor.js","components/Card/index.js"],"names":["octokit","Octokit","getRepositories","type","repositoriesAmount","sort","page","request","org","per_page","latestRepositories","repositories","repo","this","owner","login","repoName","name","languages","langs","Object","entries","totalVal","values","reduce","a","b","map","lang","idx","langValuePercentage","Math","round","langRepo","value","push","toLowerCase","getRepo","getLatestRepo","CreateCards","state","props","card","fetchLang","componentDidMount","Repo","getLanguanges","setState","console","log","createProgressBar","ProgressBar","variant","langAndTheColor","now","data-lang","renderTooltip","Popover","id","Title","as","Content","style","width","Body","Alert","Link","href","target","className","rel","height","viewBox","version","aria-hidden","fillRule","d","Subtitle","Text","Spinner","animation","OverlayTrigger","trigger","placement","overlay","Button","marginRight","marginLeft","Component","CardList","fetching","error","latestRepo","Error","content","textAlign","margin","index"],"mappings":"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","file":"static/js/9.7b6bf101.chunk.js","sourcesContent":["import { Octokit } from \"@octokit/core\";\n\nconst octokit = new Octokit();\n\nfunction getRepositories(\n  type = \"public\",\n  repositoriesAmount = 8,\n  sort = \"desc\",\n  page = 1\n) {\n  return octokit.request(\"GET /orgs/{org}/repos\", {\n    org: \"Team-Up-Dev\",\n    type: type,\n    sort: sort,\n    page: page,\n    per_page: repositoriesAmount\n  });\n}\n\nfunction latestRepositories(repositoriesAmount, page = 1) {\n  let repositories = getRepositories(\"public\", repositoriesAmount, \"desc\");\n  return repositories;\n}\n\n// eslint-disable-next-line\nexport default class {\n  constructor(repo) {\n    this[\"langs_url\"] = repo[\"languages_url\"];\n    this.owner = repo.owner.login;\n    this.repoName = repo.name;\n  }\n\n  async getLanguanges() {\n    const languages = await octokit.request(\n      `GET /repos/{owner}/{repo}/languages`,\n      {\n        owner: this.owner,\n        repo: this.repoName\n      }\n    );\n    // console.log(languages);\n    let langs = Object.entries(languages[\"data\"]);\n    let totalVal = Object.values(languages[\"data\"]).reduce((a, b) => a + b);\n\n    langs = langs.map((lang, idx) => {\n      let langValuePercentage = Math.round((lang[1] / totalVal) * 100);\n      return [lang[0], langValuePercentage];\n    });\n\n    langs = langs.map((langRepo, idx) => {\n      return {\n        lang: langRepo[0],\n        value: langRepo[1]\n      };\n    });\n\n    let a = langs.reduce((a, b) => {\n      return a + b[\"value\"];\n    }, 0);\n\n    if (a < 100) {\n      langs.push({ lang: \"other\", value: 100 - a });\n    }\n\n    // console.log(langs)\n\n    return langs;\n    // return objects of array\n  }\n}\n\nexport { latestRepositories as getLatestRepo };\n","// eslint-disable-next-line\nexport default function (lang) {\n  let language = lang.toLowerCase();\n\n  switch (language) {\n    case \"html\":\n      return \"orangeForHtml\";\n    case \"jupyter notebook\":\n      return \"orange\";\n    case \"javascript\":\n      return \"warning\";\n    case \"python\":\n    case \"css\":\n      return \"primary\";\n    case \"scss\":\n      return \"pink\";\n    default:\n      return \"gray-dark\";\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Card.scss\";\n// import list from \"./Profile\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\n\nimport { getLatestRepo } from \"../../functions/getRepositories\";\nimport Repo from \"../../functions/getRepositories\";\nimport langAndTheColor from \"../../functions/programmingLanguagesAndTheirColor\";\n\n// untuk svg buku di card\nconst BookRepoSVG = () => {\n  return (\n    <svg\n      className=\"octicon octicon-repo UnderlineNav-octicon hide-sm\"\n      height=\"20\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"20\"\n      aria-hidden=\"true\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z\"\n      ></path>\n    </svg>\n  );\n};\n\n// get latestRepository\nasync function getRepo() {\n  return await getLatestRepo();\n}\n\nclass CreateCards extends Component {\n  state = {\n    repo: this.props.card,\n    langs: null,\n    fetchLang: null\n  };\n\n  componentDidMount = async () => {\n    let repo = new Repo(this.state.repo);\n\n    try {\n      // mendapatkan presentase bahasa pemprograman yg ada di repository\n      const langs = await repo.getLanguanges();\n      this.setState({\n        langs: langs,\n        fetchLang: true\n      });\n    } catch (err) {\n      console.log(err);\n      this.setState({\n        fetchLang: true\n      });\n    }\n  };\n\n  createProgressBar = (repo) => {\n    return (\n      <ProgressBar\n        variant={langAndTheColor(repo[\"lang\"])}\n        now={repo[\"value\"]}\n        data-lang={repo[\"lang\"]}\n        key={repo[\"lang\"]}\n      />\n    );\n  };\n\n  renderTooltip = (props) => {\n    return (\n      <Popover id=\"button-tooltip\" {...props}>\n        <Popover.Title as=\"h3\">Popover ww</Popover.Title>\n        <Popover.Content>\n          And here's some <strong>amazing</strong> content. It's very engaging.\n          right?\n        </Popover.Content>\n      </Popover>\n    );\n  };\n\n  render() {\n    let { repo: card, langs, fetchLang } = this.state;\n\n    return (\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Body>\n          {card[\"archived\"] === true ? (\n            <Alert variant=\"warning\">\n              This repository has been archived archived\n            </Alert>\n          ) : (\n            \"\"\n          )}\n          <Card.Link\n            href={card[\"html_url\"]}\n            target=\"_blank\"\n            className=\"cardTitle\"\n            rel=\"noopener noreferrer\"\n          >\n            {BookRepoSVG()} {card.name}\n          </Card.Link>\n          <Card.Subtitle className=\"mb-2 mt-1 text-muted\">\n            {card[\"language\"]}\n          </Card.Subtitle>\n          <Card.Text>{card[\"description\"]}</Card.Text>\n\n          {langs === null && fetchLang === null ? (\n            <Spinner animation=\"border\" />\n          ) : langs === null && fetchLang === true ? (\n            \"\"\n          ) : (\n            <OverlayTrigger\n              trigger={[\"hover\", \"focus\"]}\n              placement=\"auto\"\n              overlay={this.renderTooltip}\n            >\n              <ProgressBar className=\"mb-2\">\n                {langs.map(this.createProgressBar)}\n              </ProgressBar>\n            </OverlayTrigger>\n          )}\n\n          <Button\n            variant=\"light\"\n            href={`${card[\"html_url\"]}/stargazers`}\n            target=\"_blank\"\n            className=\"btn\"\n            style={{ marginRight: \"2px\" }}\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fas fa-star\"></i> {card[\"stargazers_count\"]}\n          </Button>\n\n          <Button\n            variant=\"light\"\n            className=\"btn\"\n            href={`${card[\"html_url\"]}/fork`}\n            target=\"_blank\"\n            style={{ marginLeft: \"2px\", marginRight: \"2px\" }}\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fas fa-code-branch\"></i> {card[\"forks\"]}\n          </Button>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nclass CardList extends Component {\n  state = {\n    repositories: [],\n    fetching: false,\n    error: false\n  };\n\n  componentDidMount = async () => {\n    try {\n      // get latestRepo\n      let latestRepo = await getRepo();\n      console.log(\"latestRepo\", latestRepo);\n\n      if (\"status\" in latestRepo && latestRepo[\"status\"] !== 200) {\n        throw new Error(\"FAILED TO FETCH!\");\n      }\n\n      this.setState({ repositories: latestRepo, fetching: true });\n    } catch (err) {\n      console.log(\"ERROR!\", err);\n      this.setState({ fetching: true, error: true });\n    }\n  };\n\n  render() {\n    const { repositories, fetching, error } = this.state;\n\n    let content;\n\n    if (fetching === false) {\n      content = <Spinner animation=\"border\" />;\n      // console.log(\"IF\")\n    } else if (error) {\n      content = \"Error has occured! Check console to see the details\";\n    } else {\n      // console.log(\"ELSE\")\n      content = repositories[\"data\"];\n    }\n\n    return (\n      <div className=\"cards-box\">\n        <h1 style={{ textAlign: \"center\", margin: \"5px\" }}>Project</h1>\n        <div className=\"cards-box-container\" id=\"cards-list\">\n          {!error && fetching\n            ? content.map((card, index) => {\n                return <CreateCards key={index} card={card} />;\n              })\n            : content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CardList;\n"],"sourceRoot":""}